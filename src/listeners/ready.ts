import { ActivityType, Client, Events } from "discord.js";
import { Commands } from "../Commands";
import { BOT_AUTHOR, BOT_VERSION, BOT_VERSION_STATUS, printLog } from "../Bot";
import { printLogColorType } from "../utils/console";

export default (client: Client): void => {
  client.on(Events.ClientReady, async () => {
    if (!client.user || !client.application) return;

    printLog(`–≤–æ—à–ª–∞... ${client.user.username}... –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é—Å—å...`);

    client.application.commands.set(Commands);

    client.user.setStatus("dnd");
    client.user?.setActivity("ü¶¢ KristyBot (TS)", {
      type: ActivityType.Custom,
    });
    printLog(
      `—Å–º–µ–Ω–∏–ª–∞ —Å—Ç–∞—Ç—É—Å (${client.user.presence.status}), —Å–±—Ä–æ—Å–∏–ª–∞ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –ø–æ—Å—Ç–∞–≤–∏–ª–∞ –±–∞–∑–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: "${client.user.presence.activities}".`,
    );

    setInterval(
      () => {
        const activities: string[] = [
          "TypeScript Edition",
          "watching Life, love, death... Loop...",
          "watching –ñ–∏–∑–Ω—å, –ª—é–±–æ–≤—å, —Å–º–µ—Ä—Ç—å... –ö—Ä—É–≥–æ–≤–æ—Ä–æ—Ç...",
          "watching –ù–µ√ü–∞, –õ–∞–π–≤–∞, –í√ü–µ—Ä—Ç... –¶i–∫–ª...",
          "Lots of activities",
          "playing for you...",
          'üç¨ "Candy-Candy"!"',
          "üòí –°–ø—Ä—ç–π—Ç...",
          "EXA! Oops...",
          "OwO",
          "–ú–± —É—Å—Ç—Ä–æ–∏–º –ø–∞—Ç–∏?",
          "–ì–æ—Ä–∂—É—Å—å —Ç–µ–º, —á—Ç–æ –∏–∑ –ë–∞–Ω–∏—Ç–µ–∏",
          "–•—ç–π–ª–µ! –Ø - –ö—Ä√Ø—Å—Çi, –Ω–µ–∫—Ç√∂ –ë–æ—Ç",
          "–ü—Ä–∏–≤–µ—Ç! –Ø - –ö—Ä–∏—Å—Ç–∏, –º–∏–ª—ã–π –±–æ—Ç",
          "Hello! I am Kristy, the cute bot",
          "Spaaaaaaaaaaaaaaace stroke",
          "–õ–∞–Ω–¥—ã—à–∏, –ª–∞–Ω–¥—ã—à–∏...",
          "–ú–Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è —Ñ–∏–∞–ª–∫–∏, –í–∞–º?",
          "–û–π, –∞ —è –∑–∞–±—ã–ª–∞",
          "‚úä –Ø —Å–∏–ª—å–Ω–∞—è",
          "‚úä –¢—ã —Å–∏–ª—å–Ω—ã–π",
          "‚úä –¢—ã —Å–∏–ª—å–Ω–∞—è",
          "‚úä –ú–æ—Ç–∏–≤–∏—Ä—É–π—Å—è",
          "‚úä –ó–∞–±—É–¥—å –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö",
          `playing version ${BOT_VERSION}-${BOT_VERSION_STATUS} (last?)`,
          `By ${BOT_AUTHOR}`,
          `watching server "${client.guilds.cache.at(
            randomIntFromInterval(0, client.guilds.cache.size - 1),
          )?.name}"?`,
          `watching ${client.guilds.cache.size} servers...`,
        ];

        let activity =
          activities[randomIntFromInterval(0, activities.length - 1)];
        let activityType: ActivityType = 0;
        if (activity.startsWith("playing ")) {
          activity = activity.replace("playing ", "");
          activityType = ActivityType.Playing;
        } else if (activity.startsWith("watching ")) {
          activity = activity.replace("watching ", "");
          activityType = ActivityType.Watching;
        } else if (activity.startsWith("listening ")) {
          activity = activity.replace("listening ", "");
          activityType = ActivityType.Listening;
        } else {
          activityType = ActivityType.Custom;
        }

        client.user?.setActivity(activity, {
          type: activityType,
        });

        client.user?.setStatus;
        printLog(`–∏–∑–º–µ–Ω–∏–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ("${activityType}: ${activity}")`);
      },
      (1000 * 60) * 1,
    );

    let allMembersCount: number = 0;
    printLog(
      `–ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞—Å—å –∏ —Ç–µ–ø–µ—Ä—å –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º! –ö—Å—Ç–∞—Ç–∏, —è –Ω–∞ ${client.guilds.cache.size
      } —Å–µ—Ä–≤–µ—Ä–∞—Ö, –≥–¥–µ –≤ –æ–±—â–µ–π —Å—É–º–º–µ ${(client.guilds.cache.forEach((g) => {
        allMembersCount += g.memberCount;
      }),
        allMembersCount)
      } —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è)`,
      printLogColorType.getSuccess(),
    );
  });
};

function randomIntFromInterval(min: number, max: number) {
  // min and max included
  return Math.floor(Math.random() * (max - min + 1) + min);
}

import {
    CommandInteraction,
    Client,
    ApplicationCommandType,
    EmbedBuilder,
    ActivityType,
} from "discord.js";
import { Command } from "../Command";
import { printLog, printLogColorType } from "../utils/console";
import { AUTHOR_DISCORD_ID } from "../Bot";

export const KillCmd: Command = {
    name: "kill",
    description: "Kill bot...",
    type: ApplicationCommandType.ChatInput,
    run: async (client: Client, interaction: CommandInteraction) => {
        const content = new EmbedBuilder()
            .setColor("#df7f7f")
            .setAuthor({
                name: interaction.user.username,
                iconURL: interaction.user.avatarURL() || undefined,
            })
            .setTitle((client.user?.username || "Kristy") + " –ª–æ–∂–∏—Ç—Å—è —Å–ø–∞—Ç—å...")
            .setDescription(
                "–û–Ω–∞ —É—Å—Ç–∞–ª–∞...",
            )
            .setThumbnail(client.user?.avatarURL() || null);

        if (interaction.user.id != AUTHOR_DISCORD_ID) {
            await interaction.reply({
                content: `–¢—ã –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ <#${AUTHOR_DISCORD_ID}>! –£–π–¥–∏!!!!!!!`
            });

            return;
        }
        await interaction.reply({
            ephemeral: true,
            embeds: [content],
        });

        let exitSeconds = 30;
        printLog(`–±–æ—Ç –≤—ã–∫–ª—é—á–∏—Ç—Å—è –ø–æ—Å–ª–µ ${exitSeconds}-—Å–µ–∫—É–Ω–¥–Ω–æ–≥–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è!`, printLogColorType.getError());

        setInterval(async () => {
            if (exitSeconds <= 0) {
                await client.user?.setActivity(`üö´ –û—Ç–∫–ª—é—á—É—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å`, {
                    type: ActivityType.Custom,
                });
                await client.destroy();
                printLog("–∫–ª–∏–µ–Ω—Ç —É–Ω–∏—á—Ç–æ–∂–µ–Ω!", printLogColorType.getError());
                printLog("–∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã...");
                process.exit();
            }

            client.user?.setActivity(`üö´ –û—Ç–∫–ª—é—á—É—Å—å —á–µ—Ä–µ–∑ ${exitSeconds} —Å–µ–∫—É–Ω–¥`, {
                type: ActivityType.Custom,
            });

            exitSeconds -= 5;
        }, 5000);
    },
};
